{"version":3,"file":"static/js/244.1f82bd84.chunk.js","mappings":"sLAEaA,E,QAAYC,EAAAA,EAAH,mF,SCItB,EAJc,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACf,OAAO,SAACF,EAAD,UAAYE,GACpB,C,4LCFYC,EAAcF,EAAAA,EAAAA,GAAH,gDAIXG,EAAcH,EAAAA,EAAAA,GAAH,8HASXI,EAAeJ,EAAAA,EAAAA,GAAH,oEAKZK,EAAcL,EAAAA,EAAAA,EAAH,4C,SCqCxB,EA7CgB,WACd,OAA8BM,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,YAA9B,eAAOK,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,sGAEfN,GAAS,GACTF,GAAW,GAHI,UAIWS,EAAAA,EAAAA,IAAYJ,GAJvB,gBAIPK,EAJO,EAIPA,QACRN,EAAWM,GALI,kDAOfR,GAAS,GAPM,yBASfF,GAAW,GATI,6EAAH,qDAahBQ,GACD,GAAE,CAACH,KAGF,gCACGN,IAAW,SAACY,EAAA,EAAD,IACXV,IAAS,SAACW,EAAA,EAAD,CAAOnB,KAAM,iDACtBU,GAA8B,IAAnBA,EAAQU,SAClB,SAACnB,EAAD,UACGS,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACtB,EAAD,YACE,SAACC,EAAD,4BAA0BoB,MAC1B,SAACnB,EAAD,UAAcoB,MAFEF,EADP,MAQhBZ,GAA8B,IAAnBA,EAAQU,SAClB,SAACD,EAAA,EAAD,CAAOnB,KAAM,+CAIpB,C,mMCnDDyB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,cAFE,6NAIK,IAAMC,EAAiB,mCAAG,+GAEND,EAAAA,EAAAA,IAAU,sBAFJ,uBAErBE,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,sCAKvB,IAAIR,MAAM,KAAMS,SALO,yDAAH,qDASjBC,EAAY,mCAAG,WAAMC,GAAN,kGAEDL,EAAAA,EAAAA,IAAA,6BAAgCK,IAF/B,uBAEhBH,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,sCAKlB,IAAIR,MAAM,KAAMS,SALE,yDAAH,sDASZG,EAAa,mCAAG,WAAMT,GAAN,kGAEFG,EAAAA,EAAAA,IAAA,gBAAmBH,IAFjB,uBAEjBK,EAFiB,EAEjBA,KAFiB,kBAGlBA,GAHkB,sCAKnB,IAAIR,MAAM,KAAMS,SALG,yDAAH,sDASbI,EAAQ,mCAAG,WAAMV,GAAN,kGAEGG,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,aAFH,uBAEZK,EAFY,EAEZA,KAFY,kBAGbA,GAHa,sCAKd,IAAIR,MAAM,KAAMS,SALF,yDAAH,sDASRZ,EAAW,mCAAG,WAAMM,GAAN,kGAEAG,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,aAFA,uBAEfK,EAFe,EAEfA,KAFe,kBAGhBA,GAHgB,sCAKjB,IAAIR,MAAM,KAAMS,SALC,yDAAH,qD","sources":["components/Error/Error.styled.jsx","components/Error/Error.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","helpers/moviesServise.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorText = styled.p`\n  color: #800;\n  font-size: 35px;\n  text-align: center;\n`;\n","import { ErrorText } from './Error.styled';\n\nconst Error = ({ text }) => {\n  return <ErrorText>{text}</ErrorText>;\n};\n\nexport default Error;\n","import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  margin-bottom: 30px;\n`;\n\nexport const ReviewsItem = styled.li`\n  border: 1px solid #800;\n  padding: 10px;\n\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const ReviewsTitle = styled.h5`\n  font-size: 17px;\n  margin-bottom: 10px;\n`;\n\nexport const ReviewsText = styled.p`\n  font-size: 13px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader';\nimport Error from 'components/Error';\nimport { findReviews } from 'helpers/moviesServise';\nimport {\n  ReviewsList,\n  ReviewsItem,\n  ReviewsTitle,\n  ReviewsText,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [reviews, setReviews] = useState();\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const searchCast = async () => {\n      try {\n        setError(false);\n        setLoading(true);\n        const { results } = await findReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    searchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <Error text={'Sorry something went wrong, please try again'} />}\n      {reviews && reviews.length !== 0 && (\n        <ReviewsList>\n          {reviews.map(({ id, author, content }) => (\n            <ReviewsItem key={id}>\n              <ReviewsTitle>{`Author: ${author}`}</ReviewsTitle>\n              <ReviewsText>{content}</ReviewsText>\n            </ReviewsItem>\n          ))}\n        </ReviewsList>\n      )}\n      {reviews && reviews.length === 0 && (\n        <Error text={'We don`t have any reviews for this movie'} />\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhYmI3YTY1YmJhMTVkYTU2OGZjNzJlODdiNGU1MzA0ZSIsInN1YiI6IjYzZGQ1MWIyMzczYWMyMDA3YzFmNTIyNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.8pLwd2kDBypx7lwFPRi_J8X3NWyZonT21z3rtiXLa2E';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.Authorization = API_KEY;\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get('trending/movie/day');\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const { data } = await axios.get(`search/movie?query=${query}`);\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const findMovieById = async id => {\n  try {\n    const { data } = await axios.get(`movie/${id}`);\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const findCast = async id => {\n  try {\n    const { data } = await axios.get(`movie/${id}/credits`);\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const findReviews = async id => {\n  try {\n    const { data } = await axios.get(`movie/${id}/reviews`);\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n"],"names":["ErrorText","styled","text","ReviewsList","ReviewsItem","ReviewsTitle","ReviewsText","useState","loading","setLoading","error","setError","reviews","setReviews","movieId","useParams","useEffect","searchCast","findReviews","results","Loader","Error","length","map","id","author","content","axios","getTrendingMovies","data","message","searchMovies","query","findMovieById","findCast"],"sourceRoot":""}